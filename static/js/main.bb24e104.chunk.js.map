{"version":3,"sources":["Components/Statistics/Statistics.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Section/Section.jsx","Components/StatisticCounter/StatisticCounter.jsx","App.js","index.js"],"names":["Statistics","good","neutral","bad","positivePercentage","FeedbackOptions","options","onLeaveFeedback","className","map","btnName","id","type","onClick","prorTypes","ProrTypes","func","string","node","Section","title","children","defaultProps","StatisticCounter","state","event","currValue","target","outerText","setState","prevState","countTotalFeedback","countFeedbackPercentage","Math","ceil","this","btnOptions","total","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAmBeA,EAjBI,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,mBACtC,OAAO,gCACH,4CACA,sCAASH,KACT,yCAAYC,KACZ,qCAAQC,KACR,qDAAwBC,S,gBCJ1BC,G,MAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKC,UAAU,kBAAf,SACGF,EAAQG,KAAI,YAAsB,IAAnBC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GACvB,OACE,wBAEEC,KAAK,SACLC,QAASN,EAHX,SAIEG,GAHKC,UAUfN,EAAgBS,UAAY,CAC1BP,gBAAiBQ,IAAUC,KAC3BL,GAAII,IAAUE,OACdX,QAASS,IAAUG,MAGNb,QCrBTc,G,MAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,6BAAKD,IACJC,OAILF,EAAQG,aAAe,CACrBF,MAAO,IAQMD,Q,OCwDAI,E,4MAnEbC,MAAQ,CACNvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPI,gBAAkB,SAAAkB,GAClB,IAAMC,EAAYD,EAAME,OAAOC,UAEf,SAAZF,EAMc,YAAZA,EAMY,QAAZA,GACF,EAAKG,UAAS,SAAAC,GAAS,MAAK,CAC1B3B,IAAK2B,EAAU3B,IAAM,MAPvB,EAAK0B,UAAS,SAAAC,GAAS,MAAK,CAC1B5B,QAAS4B,EAAU5B,QAAU,MAP/B,EAAK2B,UAAS,SAAAC,GAAS,MAAK,CAC1B7B,KAAM6B,EAAU7B,KAAO,O,EAkB7B8B,mBAAqB,WACjB,OAAO,EAAKP,MAAMvB,KAAO,EAAKuB,MAAMtB,QAAU,EAAKsB,MAAMrB,K,EAG7D6B,wBAA0B,WACtB,OAAOC,KAAKC,KAAwB,IAAlB,EAAKV,MAAMvB,KAAc,EAAK8B,uB,4CAGpD,WACE,MAA+BI,KAAKX,MAA5BvB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,qCACE,cAAC,EAAD,CAASiB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEb,gBAAiB4B,KAAK5B,gBACtBD,QAAW8B,MAGf,cAAC,EAAD,CAAShB,MAAM,sBAAf,SACGe,KAAKX,MAAMvB,KAAO,GACnBkC,KAAKX,MAAMtB,QAAU,GACrBiC,KAAKX,MAAMrB,IAAM,EACf,cAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLkC,MAAOF,KAAKJ,qBACZ3B,mBAAoB+B,KAAKH,4BAG3B,2D,GA5DmBM,aCEhBC,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.bb24e104.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, positivePercentage }) => {\r\n    return <div>\r\n        <h2>Statistics</h2>\r\n        <p>Good:{good}</p>\r\n        <p>Neutral:{neutral}</p>\r\n        <p>Bad:{bad}</p>\r\n        <p>Positive percentage:{positivePercentage}</p>\r\n    </div>\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    positivePercentage: PropTypes.number\r\n}\r\n\r\nexport default Statistics","import ProrTypes from 'prop-types'\r\n\r\nimport './FeedbackOptions.scss'\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div className=\"FeedbackOptions\">\r\n    {options.map(({ btnName, id }) => {\r\n      return (\r\n        <button\r\n          key={id}\r\n          type=\"button\"\r\n          onClick={onLeaveFeedback}\r\n        >{btnName}\r\n        </button>\r\n      );\r\n    })}\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.prorTypes = {\r\n  onLeaveFeedback: ProrTypes.func,\r\n  id: ProrTypes.string,\r\n  options: ProrTypes.node,\r\n}\r\n\r\nexport default FeedbackOptions","import PropTypes from \"prop-types\"\r\n\r\nimport './Section.scss'\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h1>{title}</h1>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section","import { Component } from \"react\";\r\n\r\nimport Statistics from \"../Statistics\";\r\nimport FeedbackOptions from \"../FeedbackOptions\";\r\nimport Section from \"../Section/Section\";\r\n\r\nimport btnOptions from \"../../options.json\"\r\n\r\nclass StatisticCounter extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onLeaveFeedback = event => {\r\n  const currValue = event.target.outerText;\r\n  \r\n  if (currValue===\"Good\") {\r\n      this.setState(prevState => ({\r\n        good: prevState.good + 1,\r\n      }));\r\n      return;\r\n    }\r\n    if (currValue===\"Neutral\") {\r\n      this.setState(prevState => ({\r\n        neutral: prevState.neutral + 1,\r\n      }));\r\n      return;\r\n    }\r\n    if (currValue===\"Bad\") {\r\n      this.setState(prevState => ({\r\n        bad: prevState.bad + 1,\r\n      }));\r\n      return;\r\n    }\r\n  };\r\n  \r\n  countTotalFeedback = () => {\r\n      return this.state.good + this.state.neutral + this.state.bad;\r\n  };\r\n\r\n  countFeedbackPercentage = () => {\r\n      return Math.ceil((this.state.good * 100) / this.countTotalFeedback());\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n            options = {btnOptions}\r\n        />\r\n        </Section>\r\n        <Section title=\"Statistics overview\">\r\n          {this.state.good > 0 ||\r\n          this.state.neutral > 0 ||\r\n          this.state.bad > 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countFeedbackPercentage()}\r\n            />\r\n          ) : (\r\n            <p>No feedback given</p>\r\n          )}\r\n          </Section>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StatisticCounter","import StatisticCounter from \"./Components/StatisticCounter\";\n\nfunction App() {\n  return (\n    <>\n      <StatisticCounter />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}